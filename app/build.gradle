import java.text.SimpleDateFormat

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

retrolambda {
    jvmArgs '-noverify'
}

ext {
    // Git is needed in your system PATH for these commands to work.
    // If it's not installed, you can return a random value as a workaround
    getCommitCount = {
        return 'git rev-list --count origin/master'.execute().text.trim()
        // return "1"
    }

    getGitSha = {
        return 'git rev-parse --short HEAD'.execute().text.trim()
        // return "1"
    }

    getBuildTime = {
        def df = new SimpleDateFormat("yyyy-MM-dd'T'HH:mm'Z'")
        df.setTimeZone(TimeZone.getTimeZone("UTC"))
        return df.format(new Date())
    }
}

def includeUpdater() {
    return hasProperty("include_updater");
}

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.2"
    publishNonDefault true

    defaultConfig {
        applicationId "eu.kanade.tachiyomi"
        minSdkVersion 16
        targetSdkVersion 23
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        versionCode 5
        versionName "0.1.4"

        buildConfigField "String", "COMMIT_COUNT", "\"${getCommitCount()}\""
        buildConfigField "String", "COMMIT_SHA", "\"${getGitSha()}\""
        buildConfigField "String", "BUILD_TIME", "\"${getBuildTime()}\""
        buildConfigField "boolean", "INCLUDE_UPDATER", "${includeUpdater()}"

        vectorDrawables.useSupportLibrary = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    packagingOptions {
        exclude 'META-INF/DEPENDENCIES'
        exclude 'LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE'
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    // http://stackoverflow.com/questions/32759529/androidhttpclient-not-found-when-running-robolectric
    useLibrary 'org.apache.http.legacy'

}

apt {
    arguments {
        eventBusIndex "eu.kanade.tachiyomi.EventBusIndex"
    }
}

dependencies {
    final SUPPORT_LIBRARY_VERSION = '23.2.0'
    final DAGGER_VERSION = '2.0.2'
    final OKHTTP_VERSION = '3.2.0'
    final RETROFIT_VERSION = '2.0.0-beta4'
    final STORIO_VERSION = '1.8.0'
    final ICEPICK_VERSION = '3.2.0'
    final MOCKITO_VERSION = '1.10.19'

    compile fileTree(dir: 'libs', include: ['*.jar'])
    compile project(":SubsamplingScaleImageView")

    compile "com.android.support:support-v4:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:appcompat-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:cardview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:design:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:recyclerview-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:support-annotations:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:percent:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:preference-v7:$SUPPORT_LIBRARY_VERSION"
    compile "com.android.support:preference-v14:$SUPPORT_LIBRARY_VERSION"
    compile "com.squareup.okhttp3:okhttp:$OKHTTP_VERSION"
    compile "com.squareup.okhttp3:okhttp-urlconnection:$OKHTTP_VERSION"
    compile 'com.squareup.okio:okio:1.6.0'
    compile 'com.google.code.gson:gson:2.6.1'
    compile 'com.jakewharton:disklrucache:2.0.2'
    compile 'org.jsoup:jsoup:1.8.3'
    compile 'io.reactivex:rxandroid:1.1.0'
    compile 'io.reactivex:rxjava:1.1.1'
    compile "com.squareup.retrofit2:retrofit:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:converter-gson:$RETROFIT_VERSION"
    compile "com.squareup.retrofit2:adapter-rxjava:$RETROFIT_VERSION"
    compile 'com.f2prateek.rx.preferences:rx-preferences:1.0.1'
    compile "com.pushtorefresh.storio:sqlite:$STORIO_VERSION"
    compile "com.pushtorefresh.storio:sqlite-annotations:$STORIO_VERSION"
    compile 'info.android15.nucleus:nucleus:2.0.5'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.jakewharton:butterknife:7.0.1'
    compile 'com.jakewharton.timber:timber:4.1.1'
    compile 'ch.acra:acra:4.8.2'
    compile "frankiesardo:icepick:$ICEPICK_VERSION"
    provided "frankiesardo:icepick-processor:$ICEPICK_VERSION"
    compile 'com.github.dmytrodanylyk.android-process-button:library:1.0.4'
    compile 'eu.davidea:flexible-adapter:4.2.0'
    compile 'com.nononsenseapps:filepicker:2.5.2'
    compile 'com.github.amulyakhare:TextDrawable:558677e'

    compile "org.greenrobot:eventbus:3.0.0"
    apt "org.greenrobot:eventbus-annotation-processor:3.0.1"

    compile "com.google.dagger:dagger:$DAGGER_VERSION"
    apt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    apt "com.pushtorefresh.storio:sqlite-annotations-processor:$STORIO_VERSION"
    provided 'org.glassfish:javax.annotation:10.0-b28'

    compile('com.mikepenz:materialdrawer:5.1.1@aar') {
        transitive = true
    }

    compile('com.github.afollestad.material-dialogs:core:0.8.5.6@aar') {
        transitive = true
    }


    testCompile 'junit:junit:4.12'
    testCompile 'org.assertj:assertj-core:2.3.0'
    testCompile "org.mockito:mockito-core:$MOCKITO_VERSION"
    testCompile('org.robolectric:robolectric:3.0') {
        exclude group: 'commons-logging', module: 'commons-logging'
        exclude group: 'org.apache.httpcomponents', module: 'httpclient'
    }

    androidTestApt "com.google.dagger:dagger-compiler:$DAGGER_VERSION"
    compile "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
}

buildscript {
    ext.kotlin_version = '1.0.0'
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

repositories {
    mavenCentral()
}
